name: Nginx Service CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/proxy-server/**'
      - '.github/workflows/nginx-service.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/proxy-server/**'

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    # Security scan with Snyk (DevSecOps)
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/docker@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: nginx:latest
        args: --file=backend/proxy-server/Dockerfile
    
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: Build and push Docker image
      run: |
        cd backend/proxy-server
        docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/nginx-service:${{ github.sha }} .
        docker tag ${{ secrets.ACR_LOGIN_SERVER }}/nginx-service:${{ github.sha }} ${{ secrets.ACR_LOGIN_SERVER }}/nginx-service:latest
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/nginx-service:${{ github.sha }}
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/nginx-service:latest
    
    - name: Deploy to Azure Container Apps
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az containerapp update \
            --name nginx-service \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --image ${{ secrets.ACR_LOGIN_SERVER }}/nginx-service:${{ github.sha }} \
            --registry-server ${{ secrets.ACR_LOGIN_SERVER }} \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }}